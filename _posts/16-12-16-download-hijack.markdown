---
layout: post 
title: 安装包下载劫持 
---

## 安装包下载劫持 

### 简述

最近在做项目的时候测试人员反馈了这么一个问题，在线上环境点击页面下载位置，下载后却发现是其他产品。很明显我们的产品广告被运营商盯上了，下载被劫持了...

造成这个局面的原因是，

* download

> w3School
> download 属性规定被下载的超链接目标。
> 在 <a> 标签中必须设置 href 属性。该属性也可以设置一个值来规定下载文件的名称。所允许的值没有限制，浏览器将自动检测正确的文件扩展名并添加到文件 (.img, .pdf, .txt, .html, 等等)。

* 解决思路

怎么解决这个“偷梁换柱”的问题呢？根据上面download的解释可以得出一个结论，就是我们可以在下载链接地址里把APK包的扩展名改成jpg或者其他，让它看到的是一张图片而不是一个下载包在视觉上混淆，之后在下载请求到CDN后给用户返回APK数据（header里指定content-type和content-disposition类型为APK，扩展名为APK）,用这种方式来绕开运营商的劫持。这里只是提供一种解决思路，相关下载请求报文和响应报文可以在浏览器的Network中查看。

* 报文相关知识

报文就是简单的格式化数据块，可以看作是包裹着数据的盒子。每一条报文都包含一条客户端的请求，或者是服务器的响应。

报文的工作流程也叫报文流动

示例： 客户端 -> 代理 -> 【服务器】-> 代理 -> 客户端

这里木有华丽的图片就用文字代替，可以看得出报文一路向下流动～不管是请求报文还是响应报文都是向下流动。如下图我们从报文中可以读取到请求（图片http://pic01.babytreeimg.com/foto3/photos/2016/1209/584a73da98732322604527200u120580058129.jpg）信息：

![qrcode canvas](/img/161216/http-baowen.png)

一个HTTP报文请求由请求行（起始行）、请求头（首部）、请求数据3个部分。




